syntax = "proto3";

package scalar.btc.v1beta1;

import "gogoproto/gogo.proto";

import "scalar/btc/v1beta1/types.proto";

option go_package = "github.com/scalarorg/scalar-core/x/btc/types";

option (gogoproto.goproto_getters_all) = false;

message ConfirmStakingTxsStarted {
  repeated PollMapping poll_mappings = 1 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "poll_mappings,omitempty"
  ];
  string chain = 2
      [ (gogoproto.casttype) =
            "github.com/axelarnetwork/axelar-core/x/nexus/exported.ChainName" ];
  uint64 confirmation_height = 4;
  repeated bytes participants = 5
      [ (gogoproto.casttype) =
            "github.com/cosmos/cosmos-sdk/types.ValAddress" ];
}

message Event {
  enum Status {
    option (gogoproto.goproto_enum_prefix) = false;
    option (gogoproto.goproto_enum_stringer) = true;

    STATUS_UNSPECIFIED = 0
        [ (gogoproto.enumvalue_customname) = "EventNonExistent" ];
    STATUS_CONFIRMED = 1
        [ (gogoproto.enumvalue_customname) = "EventConfirmed" ];
    STATUS_COMPLETED = 2
        [ (gogoproto.enumvalue_customname) = "EventCompleted" ];
    STATUS_FAILED = 3 [ (gogoproto.enumvalue_customname) = "EventFailed" ];
  }

  string chain = 1
      [ (gogoproto.casttype) =
            "github.com/axelarnetwork/axelar-core/x/nexus/exported.ChainName" ];
  bytes tx_id = 2 [
    (gogoproto.customname) = "TxID",
    (gogoproto.nullable) = false,
    (gogoproto.customtype) = "Hash"
  ];
  uint64 index = 3;
  Status status = 4;
}