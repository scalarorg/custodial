syntax = "proto3";
package scalar.btc.v1beta1;

import "gogoproto/gogo.proto";
import "scalar/btc/v1beta1/types.proto";

option go_package = "github.com/scalarorg/scalar-core/x/btc/types";
option (gogoproto.goproto_getters_all) = false;

message VoteEvents {
  bytes chain_info = 1 [
    (gogoproto.nullable) = false,
    (gogoproto.customtype) =
        "github.com/scalarorg/bitcoin-vault/go-utils/chain.ChainInfoBytes"
  ];
  repeated Event events = 2 [ (gogoproto.nullable) = false ];
}

message Event {
  enum Status {
    option (gogoproto.goproto_enum_prefix) = false;
    option (gogoproto.goproto_enum_stringer) = true;

    STATUS_UNSPECIFIED = 0
        [ (gogoproto.enumvalue_customname) = "EventNonExistent" ];
    STATUS_CONFIRMED = 1
        [ (gogoproto.enumvalue_customname) = "EventConfirmed" ];
    STATUS_COMPLETED = 2
        [ (gogoproto.enumvalue_customname) = "EventCompleted" ];
    STATUS_FAILED = 3 [ (gogoproto.enumvalue_customname) = "EventFailed" ];
  }

  string chain = 1
      [ (gogoproto.casttype) =
            "github.com/scalarorg/scalar-core/x/nexus/exported.ChainName" ];
  bytes tx_id = 2 [
    (gogoproto.customname) = "TxID",
    (gogoproto.nullable) = false,
    (gogoproto.customtype) = "Hash"
  ];
  Status status = 3;
  uint64 index = 4;
  oneof event { EventStakingTx staking_tx = 5; }
}

message EventStakingTx {
  message StakingTxMetadata {
    bytes tag = 1
        [ (gogoproto.nullable) = false, (gogoproto.customtype) = "VaultTag" ];
    bytes version = 2 [
      (gogoproto.nullable) = false,
      (gogoproto.customtype) = "VaultVersion"
    ];
    NetworkKind network_id = 3;
    uint32 flags = 4 [ (gogoproto.casttype) = "uint8" ];
    bytes service_tag = 5;
    bool have_only_covenants = 6;
    uint32 covenant_quorum = 7 [ (gogoproto.casttype) = "uint8" ];
    uint32 destination_chain_type = 8
        [ (gogoproto.casttype) =
              "github.com/scalarorg/bitcoin-vault/go-utils/chain.ChainType" ];
    uint64 destination_chain_id = 9;
    bytes destination_contract_address = 10 [
      (gogoproto.nullable) = false,
      (gogoproto.customtype) =
          "github.com/scalarorg/scalar-core/x/evm/types.Address"
    ];
    bytes destination_recipient_address = 11 [
      (gogoproto.nullable) = false,
      (gogoproto.customtype) =
          "github.com/scalarorg/scalar-core/x/evm/types.Address"
    ];
  }

  string sender = 1;
  uint64 amount = 2;
  string asset = 3;
  bytes payload_hash = 4 [
    (gogoproto.customtype) =
        "github.com/scalarorg/scalar-core/x/evm/types.Hash",
    (gogoproto.nullable) = false
  ];
  StakingTxMetadata metadata = 5 [ (gogoproto.nullable) = false ];
}

message BTCEventCompleted {
  string chain = 1
      [ (gogoproto.casttype) =
            "github.com/scalarorg/scalar-core/x/nexus/exported.ChainName" ];
  string event_id = 2
      [ (gogoproto.customname) = "EventID", (gogoproto.casttype) = "EventID" ];
  string type = 3;
}

message BTCEventFailed {
  string chain = 1
      [ (gogoproto.casttype) =
            "github.com/scalarorg/scalar-core/x/nexus/exported.ChainName" ];
  string event_id = 2
      [ (gogoproto.customname) = "EventID", (gogoproto.casttype) = "EventID" ];
  string type = 3;
}

message BTCEventRetryFailed {
  string chain = 1
      [ (gogoproto.casttype) =
            "github.com/scalarorg/scalar-core/x/nexus/exported.ChainName" ];
  string event_id = 2
      [ (gogoproto.customname) = "EventID", (gogoproto.casttype) = "EventID" ];
  string type = 3;
}

message BridgeCallApproved {
  string chain = 1
      [ (gogoproto.casttype) =
            "github.com/scalarorg/scalar-core/x/nexus/exported.ChainName" ];
  string event_id = 2
      [ (gogoproto.customname) = "EventID", (gogoproto.casttype) = "EventID" ];
  bytes command_id = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.customname) = "CommandID",
    (gogoproto.customtype) = "CommandID"
  ];
  string sender = 4;
  string destination_chain = 5
      [ (gogoproto.casttype) =
            "github.com/scalarorg/scalar-core/x/nexus/exported.ChainName" ];
  string contract_address = 6;
  bytes payload_hash = 7
      [ (gogoproto.nullable) = false, (gogoproto.customtype) = "Hash" ];
}

message BridgeCallFailed {
  string chain = 1
      [ (gogoproto.casttype) =
            "github.com/scalarorg/scalar-core/x/nexus/exported.ChainName" ];
  string message_id = 2 [ (gogoproto.customname) = "MessageID" ];
}
