syntax = "proto3";

package scalar.btc.v1beta1;

import "gogoproto/gogo.proto";
import "scalar/permission/exported/v1beta1/types.proto";
import "scalar/btc/v1beta1/poll.proto";

option go_package = "github.com/scalarorg/scalar-core/x/btc/types";

option (gogoproto.goproto_getters_all) = false;

message ConfirmStakingTxsRequest {
  option (scalar.permission.exported.v1beta1.permission_role) =
      ROLE_UNRESTRICTED;
  bytes sender = 1 [ (gogoproto.casttype) =
                         "github.com/cosmos/cosmos-sdk/types.AccAddress" ];
  string chain = 2
      [ (gogoproto.casttype) =
            "github.com/scalarorg/scalar-core/x/nexus/exported.ChainName" ];
  repeated bytes tx_ids = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.customtype) = "Hash",
    (gogoproto.customname) = "TxIDs"
  ];
}

message ConfirmStakingTxsResponse {}

message EventConfirmStakingTxsStarted {
  repeated PollMapping poll_mappings = 1 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "poll_mappings,omitempty"
  ];
  string chain = 2
      [ (gogoproto.casttype) =
            "github.com/scalarorg/scalar-core/x/nexus/exported.ChainName" ];
  uint64 confirmation_height = 4;
  repeated bytes participants = 5
      [ (gogoproto.casttype) =
            "github.com/cosmos/cosmos-sdk/types.ValAddress" ];
}