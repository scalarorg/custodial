syntax = "proto3";
package scalar.protocol.v1beta1;

import "gogoproto/gogo.proto";
import "scalar/covenant/v1beta1/types.proto";
import "scalar/evm/v1beta1/types.proto";

option go_package = "github.com/scalarorg/scalar-core/x/protocol/types";

message ProtocolAttribute {
  LiquidityModel model = 1;
}

// DestinationChain represents a blockchain where tokens can be sent
message SupportedChain {
  string chain_name = 1; // e.g., "ethereum-sepolia"
  uint64 chain_id = 2; // e.g., "11155111"
  string chain_type = 3; // Chain type
  bytes chain_smart_contract_address = 4; // Contract address on the chain

  scalar.evm.v1beta1.ERC20TokenMetadata token = 5 [(gogoproto.nullable) = false];
}
message Protocol {
  bytes pubkey = 1;
  string name = 2;
  string tag = 3;
  ProtocolAttribute attribute = 4;
  Status status = 5;
  scalar.covenant.v1beta1.CustodianGroup custodian_group = 6;
  repeated SupportedChain chains = 7;
}
enum LiquidityModel {
  option (gogoproto.goproto_enum_prefix) = false;

  LIQUIDITY_MODEL_POOLING = 0 [(gogoproto.enumvalue_customname) = "Pooling"];
  LIQUIDITY_MODEL_TRANSACTIONAL = 1 [(gogoproto.enumvalue_customname) = "Transactional"];
}
enum Status {
  option (gogoproto.goproto_enum_prefix) = false;

  STATUS_UNSPECIFIED = 0 [(gogoproto.enumvalue_customname) = "Unspecified"];
  STATUS_ACTIVATED = 1 [(gogoproto.enumvalue_customname) = "Activated"];
  STATUS_DEACTIVATED = 2 [(gogoproto.enumvalue_customname) = "Deactivated"];
}

// BtcChain represents Bitcoin chain configuration
// message BtcChain {
//   string btc_signer_endpoint = 1; // e.g., "https://protocol.testnet.scalar.org/v1/sign-unbonding-tx"
//   string btc_signer_access_token = 2; // e.g., "616171bb-e71a-4d3f-a4a7-045de8f3cad0"
//   string btc_signer_address = 3; // e.g., "tb1q37dgjm7e7h385aykhd6gps7uqx0kv26w2ugu8c"
//   bytes btc_signer_pk = 4; // e.g.,
//   // "0x021387aab21303782b17e760c670432559df3968e52cb82cc2d8f9be43a227d5dc"
//   string btc_network = 5; // e.g., "bitcoin-testnet4"
// }
