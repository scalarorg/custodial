// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: scalar/protocol/v1beta1/query.proto

package types

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ProtocolStatus int32

const (
	StatusUnspecified ProtocolStatus = 0
	Activated         ProtocolStatus = 1
	Deactivated       ProtocolStatus = 2
)

var ProtocolStatus_name = map[int32]string{
	0: "PROTOCOL_STATUS_UNSPECIFIED",
	1: "PROTOCOL_STATUS_ACTIVATED",
	2: "PROTOCOL_STATUS_DEACTIVATED",
}

var ProtocolStatus_value = map[string]int32{
	"PROTOCOL_STATUS_UNSPECIFIED": 0,
	"PROTOCOL_STATUS_ACTIVATED":   1,
	"PROTOCOL_STATUS_DEACTIVATED": 2,
}

func (x ProtocolStatus) String() string {
	return proto.EnumName(ProtocolStatus_name, int32(x))
}

func (ProtocolStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_17e7473aa0548727, []int{0}
}

type ProtocolRequest struct {
	Status ProtocolStatus `protobuf:"varint,1,opt,name=status,proto3,enum=scalar.protocol.v1beta1.ProtocolStatus" json:"status,omitempty"`
}

func (m *ProtocolRequest) Reset()         { *m = ProtocolRequest{} }
func (m *ProtocolRequest) String() string { return proto.CompactTextString(m) }
func (*ProtocolRequest) ProtoMessage()    {}
func (*ProtocolRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_17e7473aa0548727, []int{0}
}
func (m *ProtocolRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProtocolRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ProtocolRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ProtocolRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProtocolRequest.Merge(m, src)
}
func (m *ProtocolRequest) XXX_Size() int {
	return m.Size()
}
func (m *ProtocolRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProtocolRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ProtocolRequest proto.InternalMessageInfo

func (m *ProtocolRequest) GetStatus() ProtocolStatus {
	if m != nil {
		return m.Status
	}
	return StatusUnspecified
}

type ProtocolResponse struct {
	Protocols []*Protocol `protobuf:"bytes,1,rep,name=protocols,proto3" json:"protocols,omitempty"`
}

func (m *ProtocolResponse) Reset()         { *m = ProtocolResponse{} }
func (m *ProtocolResponse) String() string { return proto.CompactTextString(m) }
func (*ProtocolResponse) ProtoMessage()    {}
func (*ProtocolResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_17e7473aa0548727, []int{1}
}
func (m *ProtocolResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProtocolResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ProtocolResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ProtocolResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProtocolResponse.Merge(m, src)
}
func (m *ProtocolResponse) XXX_Size() int {
	return m.Size()
}
func (m *ProtocolResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ProtocolResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ProtocolResponse proto.InternalMessageInfo

func (m *ProtocolResponse) GetProtocols() []*Protocol {
	if m != nil {
		return m.Protocols
	}
	return nil
}

func init() {
	proto.RegisterEnum("scalar.protocol.v1beta1.ProtocolStatus", ProtocolStatus_name, ProtocolStatus_value)
	proto.RegisterType((*ProtocolRequest)(nil), "scalar.protocol.v1beta1.ProtocolRequest")
	proto.RegisterType((*ProtocolResponse)(nil), "scalar.protocol.v1beta1.ProtocolResponse")
}

func init() {
	proto.RegisterFile("scalar/protocol/v1beta1/query.proto", fileDescriptor_17e7473aa0548727)
}

var fileDescriptor_17e7473aa0548727 = []byte{
	// 348 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x2e, 0x4e, 0x4e, 0xcc,
	0x49, 0x2c, 0xd2, 0x2f, 0x28, 0xca, 0x2f, 0xc9, 0x4f, 0xce, 0xcf, 0xd1, 0x2f, 0x33, 0x4c, 0x4a,
	0x2d, 0x49, 0x34, 0xd4, 0x2f, 0x2c, 0x4d, 0x2d, 0xaa, 0xd4, 0x03, 0x0b, 0x0b, 0x89, 0x43, 0x14,
	0xe9, 0xc1, 0x14, 0xe9, 0x41, 0x15, 0x49, 0x89, 0xa4, 0xe7, 0xa7, 0xe7, 0x83, 0x45, 0xf5, 0x41,
	0x2c, 0x88, 0x02, 0x29, 0x9c, 0x66, 0x96, 0x54, 0x16, 0xa4, 0x16, 0x43, 0x14, 0x29, 0x05, 0x71,
	0xf1, 0x07, 0x40, 0xe5, 0x83, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0xec, 0xb9, 0xd8, 0x8a,
	0x4b, 0x12, 0x4b, 0x4a, 0x8b, 0x25, 0x18, 0x15, 0x18, 0x35, 0xf8, 0x8c, 0xd4, 0xf5, 0x70, 0xd8,
	0xab, 0x07, 0xd3, 0x19, 0x0c, 0x56, 0x1e, 0x04, 0xd5, 0xa6, 0x14, 0xcc, 0x25, 0x80, 0x30, 0xb3,
	0xb8, 0x20, 0x3f, 0xaf, 0x38, 0x55, 0xc8, 0x9e, 0x8b, 0x13, 0xa6, 0x1d, 0x64, 0x2e, 0xb3, 0x06,
	0xb7, 0x91, 0x22, 0x41, 0x73, 0x83, 0x10, 0x7a, 0xb4, 0xd6, 0x31, 0x72, 0xf1, 0xa1, 0xda, 0x27,
	0x64, 0xc6, 0x25, 0x1d, 0x10, 0xe4, 0x1f, 0xe2, 0xef, 0xec, 0xef, 0x13, 0x1f, 0x1c, 0xe2, 0x18,
	0x12, 0x1a, 0x1c, 0x1f, 0xea, 0x17, 0x1c, 0xe0, 0xea, 0xec, 0xe9, 0xe6, 0xe9, 0xea, 0x22, 0xc0,
	0x20, 0x25, 0xda, 0x35, 0x57, 0x41, 0x10, 0xa2, 0x38, 0x34, 0xaf, 0xb8, 0x20, 0x35, 0x39, 0x33,
	0x2d, 0x33, 0x35, 0x45, 0x48, 0x87, 0x4b, 0x12, 0x5d, 0x9f, 0xa3, 0x73, 0x88, 0x67, 0x98, 0x63,
	0x88, 0xab, 0x8b, 0x00, 0xa3, 0x14, 0x6f, 0xd7, 0x5c, 0x05, 0x4e, 0xc7, 0xe4, 0x92, 0xcc, 0xb2,
	0xc4, 0x92, 0xd4, 0x14, 0x21, 0x03, 0x4c, 0x5b, 0x5c, 0x5c, 0x11, 0xea, 0x99, 0xa4, 0xf8, 0xbb,
	0xe6, 0x2a, 0x70, 0xbb, 0xa4, 0x26, 0xc2, 0x74, 0x48, 0xb1, 0x74, 0x2c, 0x96, 0x63, 0x70, 0xf2,
	0x3e, 0xf1, 0x48, 0x8e, 0xf1, 0xc2, 0x23, 0x39, 0xc6, 0x07, 0x8f, 0xe4, 0x18, 0x27, 0x3c, 0x96,
	0x63, 0xb8, 0xf0, 0x58, 0x8e, 0xe1, 0xc6, 0x63, 0x39, 0x86, 0x28, 0xc3, 0xf4, 0xcc, 0x92, 0x8c,
	0xd2, 0x24, 0xbd, 0xe4, 0xfc, 0x5c, 0x7d, 0x48, 0x10, 0xe4, 0x17, 0xa5, 0x43, 0x59, 0xba, 0xc9,
	0xf9, 0x45, 0xa9, 0xfa, 0x15, 0x88, 0x48, 0x03, 0x47, 0x56, 0x12, 0x1b, 0x98, 0x6f, 0x0c, 0x08,
	0x00, 0x00, 0xff, 0xff, 0x59, 0xb0, 0xbe, 0x5d, 0x28, 0x02, 0x00, 0x00,
}

func (m *ProtocolRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProtocolRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ProtocolRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Status != 0 {
		i = encodeVarintQuery(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ProtocolResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProtocolResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ProtocolResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Protocols) > 0 {
		for iNdEx := len(m.Protocols) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Protocols[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQuery(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintQuery(dAtA []byte, offset int, v uint64) int {
	offset -= sovQuery(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ProtocolRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != 0 {
		n += 1 + sovQuery(uint64(m.Status))
	}
	return n
}

func (m *ProtocolResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Protocols) > 0 {
		for _, e := range m.Protocols {
			l = e.Size()
			n += 1 + l + sovQuery(uint64(l))
		}
	}
	return n
}

func sovQuery(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozQuery(x uint64) (n int) {
	return sovQuery(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ProtocolRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProtocolRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProtocolRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= ProtocolStatus(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ProtocolResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProtocolResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProtocolResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Protocols", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Protocols = append(m.Protocols, &Protocol{})
			if err := m.Protocols[len(m.Protocols)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipQuery(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthQuery
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupQuery
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthQuery
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthQuery        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowQuery          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupQuery = fmt.Errorf("proto: unexpected end of group")
)
